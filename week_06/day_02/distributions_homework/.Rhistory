ggplot(aes(x = x, y = f1_x)) +
geom_line()
ggplot(aes(x = x, y = f1_x)) +
geom_line()
#create a sequence covering range of the data
x=seq(from = stats_top_brand$r_min,
to = stats_top_brand$r_max,
by = (stats_top_brand$r_max-stats_top_brand$r_min)/20
)
#create a normal distribution over this set of values using mean and sd from dataset
f1_x = dnorm(x = x, mean = stats_top_brand$r_mean, sd = stats_top_brand$r_sd)
ggplot()+
aes(x = x, y = f1_x) +
geom_line()
mobile_data %>%
filter(brand == top_brand) %>%
select(rating) %>%
# calculate rating as %ge
mutate(rating=rating/sum(rating))
ggplot(aes(x=rating)) +
geom_histogram(bins = 20)
mobile_data %>%
filter(brand == top_brand) %>%
select(rating) %>%
# calculate rating as %ge
mutate(p_rating= rating/sum(rating))
ggplot(aes(x=p_rating)) +
geom_histogram(bins = 20)
mobile_data %>%
filter(brand == top_brand) %>%
select(rating) %>%
# calculate rating as %ge
mutate(p_rating= rating/sum(rating)) %>%
ggplot(aes(x=p_rating)) +
geom_histogram(bins = 20)
mobile_data %>%
filter(brand == top_brand) %>%
select(rating) %>%
# calculate rating as %ge
ggplot(aes(x=p_rating)) +
geom_histogram(bins = 20)
mobile_data %>%
filter(brand == top_brand) %>%
select(rating) %>%
ggplot(aes(x=rating)) +
geom_histogram(bins = 20)
mobile_data %>%
filter(brand == top_brand) %>%
select(rating) %>%
ggplot(aes(x=rating)) +
geom_histogram(bins = 20)
mobile_data %>%
filter(brand == top_brand) %>%
select(rating) %>%
ggplot(aes(x=rating)) +
geom_density(bins = 20)
mobile_data %>%
filter(brand == top_brand) %>%
select(rating) %>%
ggplot(aes(x=rating)) +
geom_density()
mobile_data %>%
filter(brand == top_brand) %>%
select(rating) %>%
ggplot(aes(x=rating)) +
geom_density() +
aes(x = x, y = f1_x) +
geom_line(col = "red")
mobile_data %>%
filter(brand == top_brand) %>%
select(rating) %>%
ggplot(aes(x=rating)) +
geom_density() +
geom_line(aes(x = x, y = f1_x),col = "red")
ggplot()+
aes(x = x, y = f1_x) +
geom_line(col = "red")
mobile_data %>%
filter(brand == top_brand) %>%
select(rating) %>%
ggplot(aes(x=rating)) +
geom_density() +
#geom_line(aes(x = x, y = f1_x),col = "red")
mobile_data %>%
filter(brand == top_brand) %>%
select(rating) %>%
ggplot(aes(x=rating)) +
geom_density()
#geom_line(aes(x = x, y = f1_x),col = "red")
mobile_data %>%
filter(brand == top_brand) %>%
select(rating) %>%
ggplot(aes(x=rating)) +
geom_density() +
#overlay this with anormal distribution we calculated earlier
geom_line(aes(x = x, y = f1_x),col = "red")
mobile_data %>%
filter(brand == top_brand) %>%
select(rating) %>%
ggplot(aes(x=rating)) +
geom_density() +
#overlay this with the normal distribution we calculated earlier
geom_line(aes(x = x, y = f1_x),col = "red")
mobile_data %>%
filter(brand == top_brand) %>%
select(rating) %>%
ggplot(aes(x=rating)) +
geom_density() #+
#overlay this with the normal distribution we calculated earlier
#geom_line(aes(x = x, y = f1_x),col = "red")
ggplot()+
#   aes(x = x, y = f1_x) +
#geom_line(col = "red")
geom_line(aes(x = x, y = f1_x),col = "red")
mobile_data %>%
filter(brand == top_brand) %>%
select(rating) %>%
ggplot(aes(x=rating)) +
geom_density() +
#overlay this with the normal distribution we calculated earlier
geom_line(aes(x = x, y = f1_x),col = "red")
mobile_data %>%
filter(brand == top_brand) %>%
select(rating) %>%
ggplot() +
geom_density(aes(x=rating)) +
#overlay this with the normal distribution we calculated earlier
geom_line(aes(x = x, y = f1_x),col = "red")
mobile_data %>%
filter(brand == top_brand) %>%
select(rating) %>%
ggplot() +
geom_density(aes(x=rating)) +
#overlay this with the normal distribution we calculated earlier
#geom_line(aes(x = x, y = f1_x),col = "red")
mobile_data %>%
filter(brand == top_brand) %>%
select(rating) %>%
ggplot() +
geom_density(aes(x=rating)) #+
#overlay this with the normal distribution we calculated earlier
#geom_line(aes(x = x, y = f1_x),col = "red")
mobile_data %>%
filter(brand == top_brand) %>%
select(rating) %>%
ggplot() +
#geom_density(aes(x=rating)) +
#overlay this with the normal distribution we calculated earlier
geom_line(aes(x = x, y = f1_x),col = "red")
mobile_data %>%
filter(brand == top_brand) %>%
select(rating) %>%
ggplot() +
#geom_density(aes(x=rating)) +
#overlay this with the normal distribution we calculated earlier
geom_line(aes(x = x, y = f1_x),col = "red")
freq_dist <- tibble(
x = x,
f1_x = f1_x
)
mobile_data %>%
filter(brand == top_brand) %>%
select(rating) %>%
ggplot() +
#geom_density(aes(x=rating)) +
#overlay this with the normal distribution we calculated earlier
geom_line(fre_dist, aes(x = x, y = f1_x),col = "red")
mobile_data %>%
filter(brand == top_brand) %>%
select(rating) %>%
ggplot() +
#geom_density(aes(x=rating)) +
#overlay this with the normal distribution we calculated earlier
geom_line(freq_dist, aes(x = x, y = f1_x),col = "red")
mobile_data %>%
filter(brand == top_brand) %>%
select(rating) %>%
ggplot() +
geom_density(aes(x=rating)) +
#overlay this with the normal distribution we calculated earlier
geom_line(freq_dist, aes(x = x, y = f1_x),col = "red")
mobile_data %>%
filter(brand == top_brand) %>%
select(rating) %>%
ggplot() +
geom_density(aes(x=rating)) +
#overlay this with the normal distribution we calculated earlier
geom_line(data = freq_dist, aes(x = x, y = f1_x),col = "red")
mobile_data %>%
filter(brand == top_brand) %>%
select(rating) %>%
# normalise ratings
mutate(n_rating = (rating-stats_top_brand$r_mean)/stats_top_brand$r_sd) %>%
# calculate prob of ratings
summarise()
ggplot(aes(x=n_rating)) +
geom_histogram(bins = 20)
mobile_data %>%
#first normalise ratings
mutate(norm_ratings <- (ratings-stats_top_brand$r_max)/stats_top_brand$r_sd)
mobile_data %>%
#first normalise ratings
mutate(norm_ratings <- (ratings-stats_top_brand$r_max)/stats_top_brand$r_sd) %>%
filter(!between(norm_ratings, left = -1, right = 1))
mobile_data %>%
#first normalise ratings
mutate(norm_ratings <- (rating-stats_top_brand$r_max)/stats_top_brand$r_sd) %>%
filter(!between(norm_ratings, left = -1, right = 1))
mobile_data %>%
#first normalise ratings
mutate(norm_ratings = (rating-stats_top_brand$r_max)/stats_top_brand$r_sd) %>%
filter(!between(norm_ratings, left = -1, right = 1))
mobile_data %>%
#first normalise ratings
mutate(norm_ratings = (rating-stats_top_brand$r_max)/stats_top_brand$r_sd) %>%
filter(!between(norm_ratings, left = -1, right = 1))
mobile_data %>%
#first normalise ratings
mutate(norm_ratings = (rating-stats_top_brand$r_max)/stats_top_brand$r_sd) %>%
filter(!between(norm_ratings, left = -1, right = 1))
summarise(count - n())
mobile_data %>%
#first normalise ratings
mutate(norm_ratings = (rating-stats_top_brand$r_max)/stats_top_brand$r_sd) %>%
filter(!between(norm_ratings, left = -1, right = 1))
summarise(count = n())
mobile_data %>%
#first normalise ratings
mutate(norm_ratings = (rating-stats_top_brand$r_max)/stats_top_brand$r_sd) %>%
filter(!between(norm_ratings, left = -1, right = 1)) %>%
summarise(count = n())
nrow(rating)
within_1sd <- mobile_data %>%
#first normalise ratings
mutate(norm_ratings = (rating-stats_top_brand$r_max)/stats_top_brand$r_sd) %>%
filter(!between(norm_ratings, left = -1, right = 1)) %>%
summarise(count = n()/ nrow(mobile_datat$rating))
nrow(mobile_datat$rating)
within_1sd <- mobile_data %>%
#first normalise ratings
mutate(norm_ratings = (rating-stats_top_brand$r_max)/stats_top_brand$r_sd) %>%
filter(!between(norm_ratings, left = -1, right = 1)) %>%
summarise(count = n()/ nrow(rating))
nrow(rating)
within_1sd <- mobile_data %>%
#first normalise ratings
mutate(norm_ratings = (rating-stats_top_brand$r_max)/stats_top_brand$r_sd) %>%
#then filter
filter(!between(norm_ratings, left = -1, right = 1)) %>%
summarise(count = n()/ rowSums(mobile_data$rating == top_brand)))
rowSums(mobile_data$rating == top_brand)
count(mobile_data$rating == top_brand)
sum(mobile_data$rating == top_brand)
mobile_data$rating
within_1sd <- mobile_data %>%
#first normalise ratings
mutate(norm_ratings = (rating-stats_top_brand$r_max)/stats_top_brand$r_sd) %>%
#then filter
filter(!between(norm_ratings, left = -1, right = 1)) %>%
summarise(count = n()/ sum(mobile_data$brand == top_brand)))
sum(mobile_data$brand == top_brand)
within_1sd <- mobile_data %>%
#first normalise ratings
mutate(norm_ratings = (rating-stats_top_brand$r_max)/stats_top_brand$r_sd) %>%
#then filter
filter(!between(norm_ratings, left = -1, right = 1)) %>%
summarise(count = n()/ sum(mobile_data$brand == top_brand))
count = n()
within_1sd <- mobile_data %>%
#first normalise ratings
mutate(norm_ratings = (rating-stats_top_brand$r_max)/stats_top_brand$r_sd) %>%
#then filter
filter(!between(norm_ratings, left = -1, right = 1)) %>%
summarise(count = n())
/ sum(mobile_data$brand == top_brand)
sum(mobile_data$brand == top_brand)
within_1sd <- mobile_data %>%
filter(brand == top_brand) %>%
#first normalise ratings
mutate(norm_ratings = (rating-stats_top_brand$r_max)/stats_top_brand$r_sd) %>%
#then filter
filter(!between(norm_ratings, left = -1, right = 1)) %>%
summarise(count = n()/ sum(mobile_data$brand == top_brand))
within_2sd <- mobile_data %>%
filter(brand == top_brand) %>%
#first normalise ratings
mutate(norm_ratings = (rating-stats_top_brand$r_max)/stats_top_brand$r_sd) %>%
#then filter
filter(!between(norm_ratings, left = -2, right = 2)) %>%
summarise(count = n()/ sum(mobile_data$brand == top_brand))
within_3sd <- mobile_data %>%
filter(brand == top_brand) %>%
#first normalise ratings
mutate(norm_ratings = (rating-stats_top_brand$r_max)/stats_top_brand$r_sd) %>%
#then filter
filter(!between(norm_ratings, left = -3, right = 3)) %>%
summarise(count = n()/ sum(mobile_data$brand == top_brand))
wihin_1_sd, within_2_sd, within_3d
within_1_sd, within_2_sd, within_3d
within_1_sd
within_1sd
within_2sd
within_3sd
within_1sd
library(tidyverse)
library(janitor)
library(skimr)
get_mode <- function(data){
tabled_data <- table(data)
table_names <- names(tabled_data)
return( table_names[tabled_data == max(tabled_data)] )
}
mobile_data <- read_csv("data/20190928-items.csv") %>%
clean_names()
nrow(mobile_data)
ncol(mobile_data)
skim(mobile_data)
mobile_data %>%
group_by(brand) %>%
summarise(count_brand = n()) %>%
arrange(desc(count_brand)) %>%
head(10)
mobile_data %>%
group_by(brand) %>%
summarise(count_brand = n()) %>%
ggplot(aes(x= brand, y = count_brand)) +
geom_col() +
coord_flip()
top_brand <- mobile_data %>%
summarise(mode = get_mode(brand)) %>%
pull()
stats_top_brand <- mobile_data %>%
filter(brand == top_brand) %>%
select(rating) %>%
summarise(r_mean = mean(rating),
r_sd = sd(rating),
r_max = max(rating),
r_min = min(rating))
#create a sequence covering range of the data
x=seq(from = stats_top_brand$r_min,
to = stats_top_brand$r_max,
by = (stats_top_brand$r_max-stats_top_brand$r_min)/20
)
#create a normal distribution over this set of values using mean and sd from dataset
f1_x = dnorm(x = x, mean = stats_top_brand$r_mean, sd = stats_top_brand$r_sd)
freq_dist <- tibble(
x = x,
f1_x = f1_x
)
ggplot()+
aes(x = x, y = f1_x) +
geom_line(col = "red")
#geom_line(aes(x = x, y = f1_x),col = "red")
mobile_data %>%
filter(brand == top_brand) %>%
select(rating) %>%
ggplot(aes(x=rating)) +
geom_histogram(bins = 20)
mobile_data %>%
filter(brand == top_brand) %>%
select(rating) %>%
ggplot() +
geom_density(aes(x=rating)) +
#overlay this with the freq distribution we calculated earlier
geom_line(data = freq_dist, aes(x = x, y = f1_x),col = "red")
within_1sd <- mobile_data %>%
filter(brand == top_brand) %>%
#first normalise ratings
mutate(norm_ratings = (rating-stats_top_brand$r_max)/stats_top_brand$r_sd) %>%
#then filter
filter(!between(norm_ratings, left = -1, right = 1)) %>%
summarise(count = n()/ sum(mobile_data$brand == top_brand))
within_2sd <- mobile_data %>%
filter(brand == top_brand) %>%
#first normalise ratings
mutate(norm_ratings = (rating-stats_top_brand$r_max)/stats_top_brand$r_sd) %>%
#then filter
filter(!between(norm_ratings, left = -2, right = 2)) %>%
summarise(count = n()/ sum(mobile_data$brand == top_brand))
within_3sd <- mobile_data %>%
filter(brand == top_brand) %>%
#first normalise ratings
mutate(norm_ratings = (rating-stats_top_brand$r_max)/stats_top_brand$r_sd) %>%
#then filter
filter(!between(norm_ratings, left = -3, right = 3)) %>%
summarise(count = n()/ sum(mobile_data$brand == top_brand))
within_1sd
within_1sd, pnorm(q=1)
pnorm(q=1)
within_1sd
within_1sd, pnorm(q=1)-pnorm(q=-1)
within_1sd <- mobile_data %>%
filter(brand == top_brand) %>%
#first normalise ratings
mutate(norm_ratings = (rating-stats_top_brand$r_max)/stats_top_brand$r_sd) %>%
#then filter
filter(!between(norm_ratings, left = -1, right = 1)) %>%
summarise(count = n()/ sum(mobile_data$brand == top_brand))
pnorm(q=1)-pnorm(q=-1)
within_1sd
pnorm(q=2)-pnorm(q=-2)
pnorm(q=3)-pnorm(q=-3)
within_3sd
within_2sd
within_1sd
within_1sd <- mobile_data %>%
filter(brand == top_brand) %>%
#first normalise ratings
mutate(norm_ratings = (rating-stats_top_brand$r_mean)/stats_top_brand$r_sd) %>%
#then filter
filter(!between(norm_ratings, left = -1, right = 1)) %>%
summarise(count = n()/ sum(mobile_data$brand == top_brand))
within_1sd
pnorm(q=1)-pnorm(q=-1)
within_2sd <- mobile_data %>%
filter(brand == top_brand) %>%
#first normalise ratings
mutate(norm_ratings = (rating-stats_top_brand$r_mean)/stats_top_brand$r_sd) %>%
#then filter
filter(!between(norm_ratings, left = -2, right = 2)) %>%
summarise(count = n()/ sum(mobile_data$brand == top_brand))
within_1sd <- mobile_data %>%
filter(brand == top_brand) %>%
#first normalise ratings
mutate(norm_ratings = (rating-stats_top_brand$r_mean)/stats_top_brand$r_sd) %>%
#then filter
filter(between(norm_ratings, left = -1, right = 1)) %>%
summarise(count = n()/ sum(mobile_data$brand == top_brand))
within_2sd <- mobile_data %>%
filter(brand == top_brand) %>%
#first normalise ratings
mutate(norm_ratings = (rating-stats_top_brand$r_mean)/stats_top_brand$r_sd) %>%
#then filter
filter(between(norm_ratings, left = -2, right = 2)) %>%
summarise(count = n()/ sum(mobile_data$brand == top_brand))
within_3sd <- mobile_data %>%
filter(brand == top_brand) %>%
#first normalise ratings
mutate(norm_ratings = (rating-stats_top_brand$r_mean)/stats_top_brand$r_sd) %>%
#then filter
filter(between(norm_ratings, left = -3, right = 3)) %>%
summarise(count = n()/ sum(mobile_data$brand == top_brand))
within_1sd
pnorm(q=1)-pnorm(q=-1)
within_2sd
pnorm(q=2)-pnorm(q=-2)
within_3sd
pnorm(q=3)-pnorm(q=-3)
within_1sd, pnorm(q=1)-pnorm(q=-1)
within_1sd
pnorm(q=1)-pnorm(q=-1)
within_2sd
pnorm(q=2)-pnorm(q=-2)
within_3sd
pnorm(q=3)-pnorm(q=-3)
within_1sd
pnorm(q=1)-pnorm(q=-1)
mobile_data %>%
filter(brand == top_brand) %>%
select(rating) %>%
qqnorm()
mobile_data %>%
filter(brand == top_brand) %>%
select(rating) %>%
qqnorm(rating)
mobile_data %>%
filter(brand == top_brand) %>%
select(rating) %>%
qqnorm(rating, )
y <- rt(200, df = 5)
qqnorm(y);
rt
?rt
y <- rt(200, df = 5)
qqnorm(y); qqline(y, col = 2)
qqplot(y, rt(300, df = 5))
y <- rt(200, df = 5)
qqnorm(y); qqline(y, col = 2)
qqnorm(f1_x)
x=seq(from = stats_top_brand$r_min,
to = stats_top_brand$r_max,
by = (stats_top_brand$r_max-stats_top_brand$r_min)/20
)
#create a normal distribution over this set of values using mean and sd from dataset
f1_x = pnorm(x = x, mean = stats_top_brand$r_mean, sd = stats_top_brand$r_sd)
x=seq(from = 0,
to = 10,
by = 0.001
)
#create a sequence covering range of the data
x=seq(from = 0,
to = 10,
by = 0.001
)
#create a normal distribution over this set of values using mean and sd from dataset
f1_x = dnorm(x = x, mean = 3, sd = 2)
qqnorm(f1_x)
f1_x = qnorm(x = x, mean = 3, sd = 2)
f1_x = qnorm(x = x, mean = 3, sd = 2)
f1_x = pnorm(x = x, mean = 3, sd = 2)
qqnorm(f1_x)
f1_x = dnorm(x = x, mean = 3, sd = 2)
f1_x = dnorm(x = x, mean = 3, sd = 2)
qqnorm(f1_x)
f1_x = pnorm(x = x, mean = 3, sd = 2)
x=seq(from = 0,
to = 10,
by = 0.001
)
f1_x = pnorm(x = x, mean = 3, sd = 2)
f1_x = dnorm(x = x, mean = 3, sd = 2)
qqnorm(f1_x)
